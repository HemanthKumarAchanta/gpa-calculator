{"version":3,"sources":["Components/Items/form1.js","Components/Items/SubAdded.js","Components/Items/item1.js","Components/Tabs.js","App.js","Components/Theme.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","color","input","margin","button","marginTop","Form1","props","classes","noValidate","autoComplete","TextField","inputProps","min","style","textAlign","id","label","variant","size","className","IconButton","aria-label","onClick","credits","document","getElementById","value","grade","newItem","fontSize","paper","width","spacing","height","item","padding","marginLeft","SubAdded","Grid","container","Paper","Item1","useState","setCredits","setGrade","subjects","GPA","setGPA","handleCalculate","totalCredits","map","ele","index","Number","points","console","log","e","dict","length","push","List","ListItem","key","Typography","TabPanel","children","other","role","hidden","aria-labelledby","Box","p","a11yProps","flexGrow","backgroundColor","palette","background","outerGrid","TabsWrappedLabel","React","setValue","Tabs","onChange","event","newValue","Tab","wrapped","App","createMuiTheme","MuiButtonBase","disableRipple","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","ThemeProvider","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d328087d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddCircleSharpIcon from \"@material-ui/icons/AddCircleSharp\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    color: \"black\",\r\n  },\r\n  input: {\r\n    margin: 5,\r\n  },\r\n  button: {\r\n    marginTop: -6,\r\n  },\r\n}));\r\n\r\nconst Form1 = (props) => {\r\n  const classes = useStyles();\r\n  const handleAdd = () => {\r\n    const credits = document.getElementById(\"credits\").value;\r\n    const grade = document.getElementById(\"grade\").value;\r\n    props.newItem({ credits, grade });\r\n  };\r\n  return (\r\n    <>\r\n      <form noValidate autoComplete=\"off\">\r\n        <TextField\r\n          inputProps={{ min: 0, style: { textAlign: \"center\" } }}\r\n          id=\"credits\"\r\n          label=\"Credits\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          className={classes.input}\r\n        />\r\n        <TextField\r\n          inputProps={{ style: { textAlign: \"center\" } }}\r\n          id=\"grade\"\r\n          label=\"Grade\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          className={classes.input}\r\n        />\r\n        <IconButton\r\n          color=\"secondary\"\r\n          aria-label=\"add an alarm\"\r\n          className={classes.button}\r\n          onClick={handleAdd}\r\n        >\r\n          <AddCircleSharpIcon fontSize=\"large\" />\r\n        </IconButton>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form1;\r\n","import React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    width: theme.spacing(50),\r\n    height: theme.spacing(8),\r\n  },\r\n  item: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst SubAdded = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item>\r\n          <Paper className={classes.paper}>\r\n            <Grid container>\r\n              <Grid item className={classes.item}>\r\n                Number of Credits: {props.credits}\r\n              </Grid>\r\n              <Grid item className={classes.item}>\r\n                Estimated Grade: {props.grade}\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SubAdded;\r\n","import React, { useState } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddCircleSharpIcon from \"@material-ui/icons/AddCircleSharp\";\r\nimport Form1 from \"./form1\";\r\nimport SubAdded from \"./SubAdded\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\nconst Item1 = () => {\r\n  const [credits, setCredits] = useState(0);\r\n  const [indx, setindx] = useState(\"\");\r\n  const [grade, setGrade] = useState(0);\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [totalCredits, setTotalCredits] = useState(0);\r\n  const [GPA, setGPA] = useState(-1);\r\n\r\n  const handleNewSubject = (e) => {\r\n    //This is for rendering after recivng the props.\r\n    //As we set this as state, it renders\r\n    setCredits(e.credits);\r\n    setGrade(e.grade);\r\n    const dict = { credits: e.credits, grade: e.grade };\r\n    setGrade(subjects.length);\r\n    subjects.push(dict);\r\n    handleCalculate();\r\n  };\r\n\r\n  //   const handleCalculate = () => {\r\n  //     let credits = 0;\r\n  //     let totalGPA = 0;\r\n  //     subjects.map((ele, index) => {\r\n  //       credits = ele.credits + totalCredits;\r\n  //       setTotalCredits(credits);\r\n  //     });\r\n  //     subjects.map((ele, index) => {\r\n  //       let currentGPA = 0;\r\n  //       currentGPA = (ele.credits * ele.grade) / totalCredits;\r\n  //       totalGPA = totalGPA + currentGPA;\r\n  //     });\r\n  //     setGPA(totalGPA / subjects.length);\r\n  //     console.log(totalGPA);\r\n  //     console.log(totalCredits);\r\n  //     console.log(`grade is ${grade}`);\r\n  //   };\r\n\r\n  const handleCalculate = () => {\r\n    let totalCredits = 0;\r\n    subjects.map((ele, index) => {\r\n      totalCredits = totalCredits + Number(ele.credits);\r\n    });\r\n\r\n    let points = 0;\r\n    subjects.map((ele, index) => {\r\n      points = points + ele.credits * ele.grade;\r\n    });\r\n\r\n    console.log(points);\r\n    console.log(totalCredits);\r\n    setGPA(points / totalCredits);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form1 newItem={handleNewSubject} />\r\n      <h1>{GPA}</h1>\r\n      <List>\r\n        {subjects.map((ele, index) => (\r\n          <ListItem key={index}>\r\n            <Typography color=\"textSecondary\">\r\n              <SubAdded credits={ele.credits} grade={ele.grade} />\r\n            </Typography>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item1;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Item1 from \"./Items/item1\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`wrapped-tabpanel-${index}`}\r\n      aria-labelledby={`wrapped-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `wrapped-tab-${index}`,\r\n    \"aria-controls\": `wrapped-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  outerGrid: {\r\n    margin: \"auto\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    background: \"pink\",\r\n    color: \"black\",\r\n    padding: 10,\r\n    borderRadius: 10,\r\n  },\r\n}));\r\n\r\nexport default function TabsWrappedLabel() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(\"one\");\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container>\r\n        <Grid item className={classes.outerGrid}>\r\n          <Paper className={classes.paper}>\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              aria-label=\"wrapped label tabs example\"\r\n            >\r\n              <Tab\r\n                value=\"one\"\r\n                label=\"Semester GPA\"\r\n                wrapped\r\n                {...a11yProps(\"one\")}\r\n              />\r\n              <Tab value=\"two\" label=\"Subject Grade \" {...a11yProps(\"two\")} />\r\n              <Tab\r\n                value=\"three\"\r\n                label=\"CGPA Estimator\"\r\n                {...a11yProps(\"three\")}\r\n              />\r\n            </Tabs>\r\n\r\n            <TabPanel value={value} index=\"one\">\r\n              <Item1 />\r\n            </TabPanel>\r\n            <TabPanel value={value} index=\"two\">\r\n              Item Two\r\n            </TabPanel>\r\n            <TabPanel value={value} index=\"three\">\r\n              Item Three\r\n            </TabPanel>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nimport TabPanel from \"./Components/Tabs\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <div id=\"title\">\n        <h1>CGPA Calculator</h1>\n        <p>Calculate your sem GPA, overall CGPA, estimated GPA</p>\n        {/* <Container /> */}\n        <TabPanel />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  props: {\r\n    MuiButtonBase: {\r\n      disableRipple: true,\r\n    },\r\n  },\r\n});\r\nexport default theme;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport theme from \"./Components/Theme\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}