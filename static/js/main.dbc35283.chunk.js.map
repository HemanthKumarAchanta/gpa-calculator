{"version":3,"sources":["Components/Items/form1.js","Components/Items/SubAdded.js","Components/Items/item1.js","Components/Tabs.js","App.js","Components/Theme.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","color","input","margin","button","marginTop","Form1","props","useState","setCapitalGrade","classes","noValidate","autoComplete","TextField","inputProps","min","style","textAlign","id","label","type","variant","size","className","maxLength","onChange","e","target","value","onInput","toUpperCase","IconButton","aria-label","onClick","credits","document","getElementById","grade","newItem","fontSize","paper","width","spacing","height","backgroundColor","item","padding","marginLeft","SubAdded","Grid","container","Paper","elevation","deleteIcon","Item1","setCredits","setGrade","subjects","setSubjects","GPA","setGPA","PrevGPA","setPrevGPA","setUpdate","Empty","setEmpty","handleCalculate","totalCredits","map","ele","index","Number","points","result","toFixed","console","log","AlphaGrade","NumberGrade","dict","DisplayGrade","length","push","startValue","endValue","isNaN","start","end","duration","separator","decimals","decimal","showCGPA","fontWeight","List","ListItem","key","Typography","updatedSubjects","splice","handleDel","TabPanel","children","other","role","hidden","aria-labelledby","Box","p","a11yProps","flexGrow","outerGrid","background","paddingLeft","borderRadius","marginBottom","TabsWrappedLabel","React","setValue","Tabs","event","newValue","Tab","wrapped","App","createMuiTheme","MuiButtonBase","disableRipple","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","ThemeProvider","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dbc35283.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddCircleSharpIcon from \"@material-ui/icons/AddCircleSharp\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    color: \"black\",\r\n  },\r\n  input: {\r\n    margin: 5,\r\n  },\r\n  button: {\r\n    marginTop: -6,\r\n    color: \"#2d85fe\",\r\n  },\r\n}));\r\n\r\nconst Form1 = (props) => {\r\n  const [capitalGrade, setCapitalGrade] = useState(\"\");\r\n  const classes = useStyles();\r\n  const handleAdd = () => {\r\n    const credits = document.getElementById(\"credits\").value;\r\n    const grade = document.getElementById(\"grade\").value;\r\n    props.newItem({ credits, grade });\r\n  };\r\n\r\n  const toInputUppercase = (e) => {\r\n    e.target.value = (\"\" + e.target.value).toUpperCase();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form noValidate autoComplete=\"off\">\r\n        <TextField\r\n          inputProps={{ min: 0, style: { textAlign: \"center\" } }}\r\n          id=\"credits\"\r\n          label=\"Credits\"\r\n          type=\"number\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          className={classes.input}\r\n        />\r\n        <TextField\r\n          inputProps={{ style: { textAlign: \"center\" }, maxLength: 1 }}\r\n          id=\"grade\"\r\n          label=\"Grade\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          className={classes.input}\r\n          onChange={(e) => setCapitalGrade(e.target.value)}\r\n          onInput={toInputUppercase}\r\n        />\r\n        <IconButton\r\n          // color=\"primary\"\r\n          aria-label=\"add an alarm\"\r\n          className={classes.button}\r\n          onClick={handleAdd}\r\n        >\r\n          <AddCircleSharpIcon fontSize=\"large\" />\r\n        </IconButton>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form1;\r\n","import React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    width: theme.spacing(50),\r\n    height: theme.spacing(8),\r\n    backgroundColor: \"#F0F5FF\",\r\n    color: \"#10286b\",\r\n  },\r\n  item: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst SubAdded = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item>\r\n          <Paper className={classes.paper} elevation={3}>\r\n            <Grid container>\r\n              <Grid item className={classes.item}>\r\n                Number of Credits: {props.credits}\r\n              </Grid>\r\n              <Grid item className={classes.item}>\r\n                Estimated Grade: {props.grade}\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SubAdded;\r\n","import React, { useState } from \"react\";\r\n\r\nimport AddCircleSharpIcon from \"@material-ui/icons/AddCircleSharp\";\r\nimport Form1 from \"./form1\";\r\nimport SubAdded from \"./SubAdded\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\nimport CountUp from \"react-countup\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  deleteIcon: {\r\n    color: \"#2d79fe\",\r\n  },\r\n}));\r\n\r\nconst Item1 = () => {\r\n  const classes = useStyles();\r\n  const [credits, setCredits] = useState(0);\r\n  const [indx, setindx] = useState(\"\");\r\n  const [grade, setGrade] = useState(0);\r\n  const [points, setPoints] = useState(0);\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [totalCredits, setTotalCredits] = useState(0);\r\n  const [GPA, setGPA] = useState(\"\");\r\n  const [PrevGPA, setPrevGPA] = useState(0);\r\n  const [update, setUpdate] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [Empty, setEmpty] = useState(false);\r\n\r\n  const handleNewSubject = (e) => {\r\n    //This is for rendering after recivng the props.\r\n    //As we set this as state, it renders\r\n    setCredits(e.credits);\r\n    let AlphaGrade = e.grade;\r\n    let NumberGrade = 0;\r\n\r\n    switch (AlphaGrade) {\r\n      case \"S\":\r\n        NumberGrade = 10;\r\n        break;\r\n      case \"A\":\r\n        NumberGrade = 9;\r\n        break;\r\n      case \"B\":\r\n        NumberGrade = 8;\r\n        break;\r\n      case \"C\":\r\n        NumberGrade = 7;\r\n        break;\r\n      case \"D\":\r\n        NumberGrade = 6;\r\n        break;\r\n      case \"E\":\r\n        NumberGrade = 5;\r\n        break;\r\n      case \"F\":\r\n        NumberGrade = 0;\r\n        break;\r\n      case \"N\":\r\n        NumberGrade = 0;\r\n        break;\r\n    }\r\n\r\n    setGrade(NumberGrade);\r\n\r\n    const dict = {\r\n      credits: e.credits,\r\n      DisplayGrade: AlphaGrade,\r\n      grade: NumberGrade,\r\n    };\r\n    setUpdate(subjects.length); //For re-rendering\r\n    subjects.push(dict);\r\n\r\n    handleCalculate(subjects);\r\n    setEmpty(false);\r\n  };\r\n\r\n  const handleDel = (id) => {\r\n    let updatedSubjects = [...subjects];\r\n    updatedSubjects.splice(id, 1);\r\n\r\n    setSubjects(updatedSubjects);\r\n    console.log(updatedSubjects);\r\n    if (updatedSubjects.length > 0) {\r\n      handleCalculate(updatedSubjects);\r\n    } else {\r\n      setEmpty(true);\r\n    }\r\n  };\r\n\r\n  const handleCalculate = (subjects) => {\r\n    setPrevGPA(GPA);\r\n\r\n    let totalCredits = 0;\r\n    subjects.map((ele, index) => {\r\n      totalCredits = totalCredits + Number(ele.credits);\r\n    });\r\n\r\n    let points = 0;\r\n    subjects.map((ele, index) => {\r\n      points = points + ele.credits * ele.grade;\r\n    });\r\n\r\n    let result = points / totalCredits;\r\n    result = +result.toFixed(2);\r\n    console.log(\"CALCULATED\");\r\n    console.log(result);\r\n    setGPA(result);\r\n  };\r\n\r\n  const getCGPA = () => {\r\n    if (isNaN(GPA)) {\r\n      return \"\";\r\n    } else if (Empty) {\r\n      return 0;\r\n    } else {\r\n      return GPA;\r\n    }\r\n  };\r\n\r\n  const showCGPA = () => {\r\n    let startValue = PrevGPA;\r\n    let endValue = getCGPA();\r\n    return (\r\n      <CountUp\r\n        start={startValue}\r\n        end={endValue}\r\n        duration={2.75}\r\n        separator=\" \"\r\n        decimals={2}\r\n        decimal=\".\"\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form1 newItem={handleNewSubject} />\r\n      <h1 style={{ fontSize: \"3em\", color: \"#2d85fe\" }}>\r\n        {showCGPA()}\r\n        <span\r\n          style={{ fontSize: \"0.45em\", color: \"#A6A6A6\", fontWeight: \"400\" }}\r\n        >\r\n          /10\r\n        </span>\r\n      </h1>\r\n\r\n      <List>\r\n        {subjects.map((ele, index) => (\r\n          <ListItem key={index}>\r\n            <Typography color=\"textSecondary\">\r\n              <SubAdded credits={ele.credits} grade={ele.DisplayGrade} />\r\n            </Typography>\r\n\r\n            <IconButton aria-label=\"delete\" onClick={() => handleDel(index)}>\r\n              <DeleteIcon fontSize=\"large\" className={classes.deleteIcon} />\r\n            </IconButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item1;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Item1 from \"./Items/item1\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`wrapped-tabpanel-${index}`}\r\n      aria-labelledby={`wrapped-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `wrapped-tab-${index}`,\r\n    \"aria-controls\": `wrapped-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  outerGrid: {\r\n    margin: \"auto\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    background: \"white\",\r\n    color: \"black\",\r\n    // padding: 10,\r\n    paddingLeft: \"50px\",\r\n    borderRadius: 10,\r\n    width: \"560px\",\r\n    marginBottom: \"100px\",\r\n  },\r\n}));\r\n\r\nexport default function TabsWrappedLabel() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(\"one\");\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container>\r\n        <Grid item className={classes.outerGrid}>\r\n          <Paper className={classes.paper}>\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              aria-label=\"wrapped label tabs example\"\r\n            >\r\n              <Tab\r\n                value=\"one\"\r\n                label=\"Semester GPA\"\r\n                wrapped\r\n                {...a11yProps(\"one\")}\r\n              />\r\n              <Tab value=\"two\" label=\"Subject Grade \" {...a11yProps(\"two\")} />\r\n              <Tab\r\n                value=\"three\"\r\n                label=\"CGPA Estimator\"\r\n                {...a11yProps(\"three\")}\r\n              />\r\n            </Tabs>\r\n\r\n            <TabPanel value={value} index=\"one\">\r\n              <Item1 />\r\n            </TabPanel>\r\n            <TabPanel value={value} index=\"two\">\r\n              <p style={{ color: \"black\" }}>\r\n                This Feature is Under Construction &#129365;\r\n              </p>\r\n            </TabPanel>\r\n            <TabPanel value={value} index=\"three\">\r\n              <p style={{ color: \"black\" }}>\r\n                This Feature is also Under Construction &#129365;\r\n              </p>\r\n            </TabPanel>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport TabPanel from \"./Components/Tabs\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <div id=\"title\">\r\n        <h1>GPA Calculator</h1>\r\n        <p>\r\n          Calculate your Semester GPA, Cumulative CGPA and Estimated Grade for a\r\n          subject\r\n        </p>\r\n\r\n        <TabPanel />\r\n      </div>\r\n      <div\r\n        className=\"footer\"\r\n        style={{\r\n          textAlign: \"center\",\r\n          marginTop: \"2em\",\r\n          // position: \"fixed\",\r\n          // left: \"50%\",\r\n          // transform: \"translate(-50%, 20%)\",\r\n        }}\r\n      >\r\n        <p> Made with love exclusively for VITians &#128154;</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  props: {\r\n    MuiButtonBase: {\r\n      disableRipple: true,\r\n    },\r\n  },\r\n});\r\nexport default theme;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport theme from \"./Components/Theme\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}